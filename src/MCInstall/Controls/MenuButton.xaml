<UserControl
    x:Class="MCInstall.Controls.MenuButton"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:vm="clr-namespace:MCInstall.ViewModels"
    x:Name="this"
    mc:Ignorable="d">

    <UserControl.Resources>

        <Style x:Key="MenuIndicatorStyle" TargetType="{x:Type Border}">
            <Setter Property="Background" Value="{StaticResource Color1Brush}" />
            <Setter Property="Width" Value="5" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Visibility" Value="Hidden" />
            <Setter Property="Opacity" Value=".5" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ToggleButton}}" Value="True">
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
                <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ToggleButton}}" Value="True">
                    <Setter Property="Visibility" Value="Visible" />
                    <Setter Property="Opacity" Value="1" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style
            x:Key="MenuIconStyle"
            BasedOn="{StaticResource IconStyle}"
            TargetType="{x:Type TextBlock}">
            <Setter Property="Margin" Value="10,0,0,0" />
            <Setter Property="Foreground" Value="Gray" />
            <Setter Property="Opacity" Value=".5" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ToggleButton}}" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource Color1Brush}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ToggleButton}}" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource Color1Brush}" />
                    <Setter Property="Opacity" Value="1" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style
            x:Key="MenuTextStyle"
            BasedOn="{StaticResource BaseTextBlockStyle}"
            TargetType="{x:Type TextBlock}">
            <Setter Property="Margin" Value="10,0,0,0" />
            <Setter Property="Foreground" Value="Gray" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Opacity" Value=".5" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ToggleButton}}" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource Color1Brush}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ToggleButton}}" Value="True">
                    <Setter Property="Opacity" Value="1" />
                    <Setter Property="Foreground" Value="{StaticResource Color1Brush}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style
            x:Key="MenuButtonStyle"
            BasedOn="{StaticResource BaseStyle}"
            TargetType="{x:Type ToggleButton}">
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="IsHitTestVisible" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border
                            Height="{Binding Height, ElementName=this}"
                            Background="{TemplateBinding Background}"
                            BorderThickness="0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>

                                <Border Style="{StaticResource MenuIndicatorStyle}" />

                                <TextBlock
                                    Grid.Column="1"
                                    FontSize="{Binding IconSize, ElementName=this}"
                                    Style="{StaticResource MenuIconStyle}"
                                    Text="{Binding Icon, ElementName=this}" />

                                <TextBlock
                                    Grid.Column="2"
                                    Style="{StaticResource MenuTextStyle}"
                                    Text="{Binding Text, ElementName=this}" />
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsSelected, ElementName=this}" Value="true">
                                <Setter Property="IsChecked" Value="True" />
                            </DataTrigger>

                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="IsHitTestVisible" Value="False" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <RadioButton
        Focusable="False"
        Command="{Binding Command, ElementName=this}"
        GroupName="{Binding GroupName, ElementName=this}"
        Style="{StaticResource MenuButtonStyle}"/>
</UserControl>